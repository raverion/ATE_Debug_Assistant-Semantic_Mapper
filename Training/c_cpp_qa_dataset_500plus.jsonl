{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
{"text": "Q: What is a pointer in C?\nA: A pointer in C is a variable that stores the memory address of another variable."}
{"text": "Q: What is the difference between malloc and calloc?\nA: malloc allocates memory without initializing it, whereas calloc allocates memory and initializes all bits to zero."}
{"text": "Q: What is a segmentation fault?\nA: A segmentation fault occurs when a program tries to access memory it is not allowed to."}
{"text": "Q: How do you pass an array to a function in C?\nA: You pass the array name, which acts as a pointer to the first element."}
{"text": "Q: What is a memory leak in C?\nA: A memory leak occurs when allocated memory is not properly deallocated using free()."}
{"text": "Q: What is the difference between class and struct in C++?\nA: In C++, class members are private by default, while struct members are public by default."}
{"text": "Q: Explain the concept of constructors in C++.\nA: Constructors are special class functions that are automatically called when an object is instantiated."}
{"text": "Q: What is operator overloading?\nA: Operator overloading allows you to redefine the way operators work for user-defined types."}
{"text": "Q: What is a virtual function?\nA: A virtual function is a member function in a base class that you can override in a derived class."}
{"text": "Q: What is the use of 'this' pointer?\nA: 'this' pointer is an implicit pointer passed to all non-static member functions that points to the object itself."}
{"text": "Q: What is move semantics in C++?\nA: Move semantics allow the resources of temporary objects to be moved rather than copied."}
{"text": "Q: Explain RAII in C++.\nA: RAII stands for Resource Acquisition Is Initialization. It binds the resource's lifetime to the lifetime of an object."}
{"text": "Q: What is a lambda expression in C++?\nA: Lambda expressions allow you to define anonymous functions directly in your code."}
{"text": "Q: What is the use of std::unique_ptr?\nA: std::unique_ptr is a smart pointer that owns and manages another object through a pointer and deletes it when the unique_ptr goes out of scope."}
{"text": "Q: Explain the concept of templates in C++.\nA: Templates allow writing generic and reusable code for functions and classes."}
